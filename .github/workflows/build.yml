name: Build VDB Converter

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libboost-dev libboost-system-dev
          sudo apt-get install -y libtbb-dev libopenvdb-dev libblosc-dev
          sudo apt-get install -y libopenexr-dev zlib1g-dev

      - name: Configure and build C++ executable
        run: |
          mkdir -p build
          cd build
          cmake ..
          make -j$(nproc)
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools numpy pybind11
      
      - name: Build Python package
        run: |
          python -m pip install .
      
      - name: Upload C++ artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-cpp-artifacts
          path: build/convertvdb

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install dependencies
        run: |
          brew install boost tbb blosc openexr zlib openvdb
      
      - name: Configure and build C++ executable
        run: |
          mkdir -p build
          cd build
          cmake ..
          make -j$(sysctl -n hw.ncpu)
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools numpy pybind11
      
      - name: Build Python package
        run: |
          python -m pip install .
      
      - name: Upload C++ artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-cpp-artifacts
          path: build/convertvdb

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: '33b22de4aa1fa9e4de5e5daa8ef24905e136cede'
      
      - name: Install dependencies with vcpkg
        run: |
          vcpkg install openvdb:x64-windows openexr:x64-windows tbb:x64-windows blosc:x64-windows zlib:x64-windows boost-system:x64-windows
      
      - name: Configure and build C++ executable
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          cmake --build . --config Release
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools numpy pybind11
      
      - name: Modify setup.py for vcpkg
        shell: pwsh
        run: |
          # Add VCPKG_ROOT environment variable for the build
          echo "VCPKG_ROOT=${{ github.workspace }}/vcpkg" >> $GITHUB_ENV
      
      - name: Build Python package
        run: |
          $env:VCPKG_ROOT = "${{ github.workspace }}/vcpkg"
          $env:PATH += ";$env:VCPKG_ROOT/installed/x64-windows/bin"
          
          # Modify the setup.py to look for OpenEXR in the correct location
          (Get-Content -Path setup.py) -replace "VCPKG_ROOT = .*", "VCPKG_ROOT = '${{ github.workspace }}/vcpkg'" | Set-Content -Path setup.py
          
          python -m pip install -v .
        shell: pwsh
      
      - name: Upload C++ artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-cpp-artifacts
          path: build/Release/convertvdb.exe